import React, { useState } from 'react';
import {
Grid, Typography, TextField, Box, Paper, Divider,
FormControlLabel, Checkbox, Radio, RadioGroup, FormControl,
FormLabel, Chip
} from '@mui/material';
import { useTheme } from '@mui/material/styles';
import {
Event, AccessTime, Accessibility, Restaurant, ContactPhone
} from '@mui/icons-material';
import ErrorBoundary from '../common/ErrorBoundary';

// Career Fair date options (for the demo)
const FAIR_DATES = [
'2025-07-15',
'2025-07-16',
'2025-07-17',
];

// Time slots
const TIME_SLOTS = [
'09:00 - 11:00',
'11:00 - 13:00',
'14:00 - 16:00',
'16:00 - 18:00'
];

// Interview preferences
const INTERVIEW_PREFERENCES = [
'In-person at the career fair',
'Video call after the fair',
'Phone call after the fair',
'No preference'
];

const AvailabilityForm = ({ formData, handleChange }) => {
  // Get theme for consistent styling
  const theme = useTheme();

  // Handle emergency contact field changes
  const handleEmergencyContactChange = (field, value) => {
    handleChange('emergencyContact', field, value);
  };

  return (
    <ErrorBoundary fallbackMessage="There was an error loading the availability form. Please try again later.">
      <Box className="availability-form" data-testid="availability-form">
        <Typography variant="h5" gutterBottom sx={{ color: theme.palette.primary.main, fontWeight: 600 }}>
          Availability & Preferences
        </Typography>
        <Typography variant="body2" sx={{ mb: 3, color: 'text.secondary' }}>
          Please indicate your availability for the Career Fair and any specific needs or preferences you may have.
        </Typography>

        {/* Date Availability Section */}
        <Box sx={{ mb: 4 }}>
          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
            <Event sx={{ color: theme.palette.primary.main, mr: 1 }} />
            <Typography variant="h6" sx={{ fontWeight: 600 }}>
              Date Availability
            </Typography>
          </Box>

          <Paper elevation={2} sx={{ p: 3, borderRadius: '4px' }}>
            <Typography variant="subtitle1" gutterBottom>
              Select the dates you are available to attend the Career Fair:
            </Typography>
            <Typography variant="body2" color="text.secondary" gutterBottom>
              The fair will run from July 15-17, 2025. You can attend on multiple days.
            </Typography>

            <Grid container spacing={2} sx={{ mt: 2 }}>
              {['July 15', 'July 16', 'July 17'].map((date) => (
                <Grid item xs={12} sm={4} key={date}>
                  <FormControlLabel
                    control={
                      <Checkbox
                        checked={formData.availableDates?.includes(date) || false}
                        onChange={(e) => {
                          const currentDates = formData.availableDates || [];
                          if (e.target.checked) {
                            handleChange('availableDates', [...currentDates, date]);
                          } else {
                            handleChange('availableDates', 
                              currentDates.filter((d) => d !== date)
                            );
                          }
                        }}
                        color="primary"
                      />
                    }
                    label={date}
                  />
                </Grid>
              ))}
            </Grid>

            {formData.availableDates?.length === 0 && (
              <Typography color="error" sx={{ mt: 1 }}>
                Please select at least one date you are available.
              </Typography>
            )}
          </Paper>
        </Box>

        <Divider sx={{ my: 4 }} />

        {/* Time Preference Section */}
        <Box sx={{ mb: 4 }}>
          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
            <AccessTime sx={{ color: theme.palette.primary.main, mr: 1 }} />
            <Typography variant="h6" sx={{ fontWeight: 600 }}>
              Time Preferences
            </Typography>
          </Box>

          <Paper elevation={2} sx={{ p: 3 }}>
            <Typography variant="subtitle1" gutterBottom>
              What time of day do you prefer to participate?
            </Typography>

            <FormControl component="fieldset" sx={{ mt: 2 }}>
              <RadioGroup
                value={formData.timePreference || ''}
                onChange={(e) => handleChange('timePreference', e.target.value)}
              >
                <FormControlLabel value="morning" control={<Radio />} label="Morning (9:00 AM - 12:00 PM)" />
                <FormControlLabel value="afternoon" control={<Radio />} label="Afternoon (1:00 PM - 4:00 PM)" />
                <FormControlLabel value="flexible" control={<Radio />} label="Flexible (No preference)" />
              </RadioGroup>
            </FormControl>
          </Paper>
        </Box>

        <Divider sx={{ my: 4 }} />

        {/* Emergency Contact Section */}
        <Box sx={{ mb: 4 }}>
          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
            <ContactPhone sx={{ color: theme.palette.primary.main, mr: 1 }} />
            <Typography variant="h6" sx={{ fontWeight: 600 }}>
              Emergency Contact
            </Typography>
          </Box>

          <Paper elevation={2} sx={{ p: 3 }}>
            <Typography variant="subtitle1" gutterBottom>
              Please provide an emergency contact
            </Typography>

            <Grid container spacing={2} sx={{ mt: 2 }}>
              <Grid item xs={12} sm={6}>
                <TextField
                  fullWidth
                  label="Contact Name"
                  variant="outlined"
                  value={formData.emergencyContact?.name || ''}
                  onChange={(e) => handleEmergencyContactChange('name', e.target.value)}
                />
              </Grid>
              <Grid item xs={12} sm={6}>
                <TextField
                  fullWidth
                  label="Contact Phone"
                  variant="outlined"
                  value={formData.emergencyContact?.phone || ''}
                  onChange={(e) => handleEmergencyContactChange('phone', e.target.value)}
                />
              </Grid>
              <Grid item xs={12}>
                <TextField
                  fullWidth
                  label="Relationship"
                  variant="outlined"
                  value={formData.emergencyContact?.relationship || ''}
                  onChange={(e) => handleEmergencyContactChange('relationship', e.target.value)}
                />
              </Grid>
            </Grid>
          </Paper>
        </Box>

        <Box sx={{ mt: 4, p: 2, bgcolor: 'rgba(211, 97, 53, 0.1)', borderRadius: 2 }}>
          <Typography variant="body2" color="text.secondary">
            <strong>Note:</strong> We&apos;ll do our best to accommodate your availability preferences, but please understand that employer schedules may vary. We&apos;ll confirm your schedule before the event.
          </Typography>
        </Box>
      </Box>
    </ErrorBoundary>
  );
};


export default AvailabilityForm;
